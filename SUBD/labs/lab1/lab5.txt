--Лабораторная выполняется в СУБД  Oracle. 
--Cкопируйте файл  FPMI-STUD\SUBFACULTY\каф ИСУ\Исаченко\Лабораторные\EDU4.sql  в каталог C:\TEMP .
--Раскройте файл и ознакомтесь со скриптом создания и заполнения таблиц для выполнения лабораторной. 
--Таблица Emp имеет дополнительные столбцы mstat (семейное положение), Nchild (количество несовершеннолетних детей).  
--Произведите запуск SQLPlus  и соеденитесь с БД под логином Scott и паролем Tiger.  Запустите скрипты EDU4.sql на выполнение.
--Вставте в эту строку Ваши ФИО, номер группы, курса. ФИО                       , группа            , курс 4.      
--Файл с отчётом о выполнении лабораторной создаётся путём вставки скриптов, созданных Вами программ после пунктов 1-5.
--Файл отчёта именуется фамилией студента  в английской транскрипции, с расширением .txt и сохраняется в каталог  fpmi-serv604\comman_stud\исаченко\Лаб\группа_.                  .

--1. Создайте триггер, который при добавлении или обновлении записи в таблице EMP 
-- должен отменять действие и сообщать об ошибке:
--a) если для сотрудника с семейным положением холост (s)  в столбце Nchild указывается данное, отличное от NULL или 0;
--b) если для любого сотрудника указывается отрицательное количество детей.


--2. Создайте триггер, который при добавлении или обновлении записи в таблице EMP должен:
-- a) осуществлять вставку данного равного 0,
--если для сотрудника с семейным положением холост (s)  в столбце Nchild указывается данное, отличное от NULL или 0;
--b) осуществлять вставку данного NULL,
--если для любого сотрудника указывается отрицательное количество детей.

--3. Создайте триггер, который при обновлении записи в таблице EMP 
--должен отменять действие и сообщать об ошибке, если для сотрудников, находящихся в браке (m) в столбце Nchild 
--новое значение отличается от текущего более чем на 1.

--4. Создать триггер, который отменяет любые действия (начисление, изменение, удаление) с премиями (таблица bonus) 
-- неработающих в настоящий момент в организации сотрудников и сообщает об ошибке.

--5. Создайте триггер, который до выполнения действия (вставка, обновление, удаление) с таблицей job
--создаёт запись в таблице temp_table, с указанием названия действия (delete, update, insert) активизирующего триггер.

